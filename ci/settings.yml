---
meta:
  name:    redis-debian
  target:  sw
  url:     https://ci.starkandwayne.com
  test-errand: sanity-tests

  initial_version: 1.0.0

  git:
    email:  ci@starkandwayne.com
    name:   "CI Bot"

  bosh-lite:
    target: https://10.58.111.49:25555
    username: (( vault "secret/bosh-lites/lite49/users/admin:username" ))
    password: (( vault "secret/bosh-lites/lite49/users/admin:password" ))
    cacert:   (( vault "secret/bosh-lites/lite49/certs:rootCA.pem" ))

  aws:
    bucket: redis-boshrelease
    access_key: (( vault "secret/aws/cfcommunity:access" ))
    secret_key: (( vault "secret/aws/cfcommunity:secret" ))

  github:
    owner:  cloudfoundry-community
    repo:   (( concat meta.name "-boshrelease" ))
    branch: master
    private_key:  (( vault "secret/pipelines/shared/github:private_key" ))
    access_token: (( vault "secret/pipelines/shared/github:access_token" ))

  slack:
    webhook: (( vault "secret/pipelines/redis-boshrelease/slack:webhook" ))
    channel:       '#redis-boshrelease'
    username:      starkandwayne-ci
    icon:          https://www.starkandwayne.com/assets/images/shield-blue-50x50.png
    blob_success:  '(( concat "$BUILD_PIPELINE_NAME: New version of $BUILD_JOB_NAME was detected, and updated in master. <" meta.url "/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME| Cut a new release?>" ))'
    blob_failure:  '(( concat "$BUILD_PIPELINE_NAME: :airplane_arriving: <" meta.url "/teams/$BUILD_TEAM_NAME/pipelines/$BUILD_PIPELINE_NAME/jobs/$BUILD_JOB_NAME/builds/$BUILD_NAME| Failed to update the blob for $BUILD_JOB_NAME>" ))'

groups:
- name: deps
  jobs:
  - bpm-release
  - os-conf-release

jobs:
- name: bpm-release
  public: true
  plan:
  - aggregate:
    - { get: git }
    - { get: bpm-release, trigger: true, params: { tarball: false }}
  - task: bump-bpm
    config:
      image_resource:
        type: docker-image
        source:
          repository: (( grab meta.image.name ))
          tag:        (( grab meta.image.tag ))
      platform: linux
      inputs:
      - name: git
      - name: bpm-release
      outputs:
      - name: pushme
      run:
        path: ./git/ci/scripts/bump-release
      params:
        REPO_ROOT: git
        REPO_OUT:  pushme
        RELEASE:   bpm-release
        NAME:      bpm
        GIT_EMAIL:      (( grab meta.git.email ))
        GIT_NAME:       (( grab meta.git.name ))
  - name: upload-git
    put: git
    params:
      rebase: true
      repository: pushme
    on_success:
      put: notify
      params:
        channel:  (( grab meta.slack.channel ))
        username: (( grab meta.slack.username ))
        icon_url: (( grab meta.slack.icon ))
        text:     (( grab meta.slack.blob_success ))
- name: os-conf-release
  public: true
  plan:
  - aggregate:
    - { get: git }
    - { get: os-conf-release, trigger: true, params: { tarball: false }}
  - task: bump-os-conf
    config:
      image_resource:
        type: docker-image
        source:
          repository: (( grab meta.image.name ))
          tag:        (( grab meta.image.tag ))
      platform: linux
      inputs:
      - name: git
      - name: os-conf-release
      outputs:
      - name: pushme
      run:
        path: ./git/ci/scripts/bump-release
      params:
        REPO_ROOT: git
        REPO_OUT:  pushme
        RELEASE:   os-conf-release
        NAME:      os-conf
        GIT_EMAIL:      (( grab meta.git.email ))
        GIT_NAME:       (( grab meta.git.name ))
  - name: upload-git
    put: git
    params:
      rebase: true
      repository: pushme
    on_success:
      put: notify
      params:
        channel:  (( grab meta.slack.channel ))
        username: (( grab meta.slack.username ))
        icon_url: (( grab meta.slack.icon ))
        text:     (( grab meta.slack.blob_success ))

resources:
  - name: bpm-release
    type: bosh-io-release
    source:
      repository: cloudfoundry-incubator/bpm-release
  - name: os-conf-release
    type: bosh-io-release
    source:
      repository: cloudfoundry/os-conf-release
